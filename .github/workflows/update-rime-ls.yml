name: Update rime-ls

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

env:
  FORMULA: rime-ls
  UPSTREAM: wlh320/rime-ls

permissions:
  contents: write

jobs:
  check:
    runs-on: macos-latest
    outputs:
      version: ${{ steps.livecheck.outputs.version }}
      url: ${{ steps.livecheck.outputs.url }}
      sha256: ${{ steps.livecheck.outputs.sha256 }}
    steps:
      - uses: actions/checkout@v4
      - id: livecheck
        env:
          EVENT: ${{ github.event_name }}
          REPO: ${{ github.repository }}
          HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          brew tap $REPO

          brew livecheck $REPO/$FORMULA --json > livecheck.json
          PROCEED=$(jq -r '.[0].version.outdated' livecheck.json)

          if [ "$EVENT" = "workflow_dispatch" ]; then
            PROCEED="true"
          fi

          if [ "$PROCEED" = "true" ]; then
            VERSION=$(jq -r '.[0].version.latest' livecheck.json)
            echo "version=$VERSION" >> $GITHUB_OUTPUT

            BASE_URL="https://github.com/$UPSTREAM/archive/refs/tags"
            NEW_URL="$BASE_URL/v$VERSION.tar.gz"
            echo "url=$NEW_URL" >> $GITHUB_OUTPUT

            SHA256=$(curl -L $NEW_URL | shasum -a 256 | awk '{print $1}')
            echo "sha256=$SHA256" >> $GITHUB_OUTPUT
          else
            echo "version=" >> $GITHUB_OUTPUT
          fi

  build-and-release:
    needs: check
    if: needs.check.outputs.version != ''
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: Homebrew/actions/setup-homebrew@main

      - name: Build bottle and release
        env:
          NEW_URL: ${{ needs.check.outputs.url }}
          NEW_SHA: ${{ needs.check.outputs.sha256 }}
          HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ needs.check.outputs.version }}
          REPO: ${{ github.repository }}
        run: |
          set -euo pipefail

          sed -i.bak "s|url \".*\"|url \"$NEW_URL\"|" Formula/$FORMULA.rb
          sed -i.bak "s/sha256 \".*\"/sha256 \"$NEW_SHA\"/" Formula/$FORMULA.rb

          brew install --build-bottle "$REPO/$FORMULA"
          brew bottle --json "$FORMULA"

          if gh release view "$FORMULA-v$VERSION" &>/dev/null; then
            BOTTLE_FILE=$(ls *.bottle*.tar.gz)
            ASSET_EXISTS=$(gh release view "$FORMULA-v$VERSION" --json assets -q "first(.assets[] | .name == \"$BOTTLE_FILE\") != null")
            if [ "$ASSET_EXISTS" = "true" ]; then
              gh release delete-asset "$FORMULA-v$VERSION" "$BOTTLE_FILE" -y
            fi
            gh release upload "$FORMULA-v$VERSION" "$BOTTLE_FILE"
          else
            gh release create "$FORMULA-v$VERSION" --title "$FORMULA v$VERSION" *.bottle*.tar.gz
          fi

          brew bottle --merge --write --no-commit *.bottle.json --root-url="https://github.com/$REPO/releases/download/$FORMULA-v$VERSION"

      - name: Create pull request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "$FORMULA ${{ needs.check.outputs.version }}"
          title: "Bump $FORMULA to v${{ needs.check.outputs.version }}"
          body: "Automated update for $FORMULA version v${{ needs.check.outputs.version }}"
          base: main
          branch: "update/$FORMULA-v${{ needs.check.outputs.version }}"
          delete-branch: true
          add-paths: "Formula/$FORMULA.rb"
