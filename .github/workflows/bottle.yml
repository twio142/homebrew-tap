name: Build bottles

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "Formula/**.rb"

permissions:
  contents: write

jobs:
  prep:
    runs-on: ubuntu-latest
    outputs:
      formula: ${{ steps.get-info.outputs.formula }}
      version: ${{ steps.get-info.outputs.version }}
      root_url: ${{ steps.get-info.outputs.root_url }}
    steps:
      - uses: actions/checkout@v4
      - id: get-info
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
          REPO: ${{ github.repository }}
        run: |
          FORMULA=$(echo "$PR_TITLE" | awk '{print $1}')
          VERSION=$(echo "$PR_TITLE" | awk '{print $2}')
          ROOT_URL="https://github.com/$REPO/releases/download/$FORMULA-v$VERSION"
          {
            echo "formula=$FORMULA"
            echo "version=$VERSION"
            echo "root_url=$ROOT_URL"
          } >> "$GITHUB_OUTPUT"

  test-bot:
    needs: prep
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    continue-on-error: true
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: Homebrew/actions/setup-homebrew@main

      - name: Build and upload bottle
        id: build
        env:
          HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FORMULA: ${{ needs.prep.outputs.formula }}
          ROOT_URL: ${{ needs.prep.outputs.root_url }}
        run: |
          set -euo pipefail

          brew test-bot "$FORMULA"
          brew bottle --json --root-url="$ROOT_URL" "$FORMULA"

          TARBALL=$(ls -- *.bottle*.tar.gz)
          JSON_FILE=$(ls -- *.bottle.json)
          BOTTLE=$(jq -r '.. | .filename? | select(.)' "$JSON_FILE" | head -n 1)
          mv "$TARBALL" "$BOTTLE"

      - name: Upload bottle and JSON
        uses: actions/upload-artifact@v4
        with:
          name: bottles-${{ matrix.os }}
          path: |
            *.bottle*.tar.gz
            *.bottle.json

  release:
    needs: [prep, test-bot]
    if: success() || failure()
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Homebrew/actions/setup-homebrew@main

      - name: Download all bottle artifacts
        uses: actions/download-artifact@v4
        with:
          path: bottles
          pattern: bottles-*
          merge-multiple: true

      - name: Release
        id: release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FORMULA: ${{ needs.prep.outputs.formula }}
          VERSION: ${{ needs.prep.outputs.version }}
        run: |
          set -euo pipefail

          if [ -z "$(ls bottles/*.tar.gz 2>/dev/null)" ]; then
            echo "No bottles were built, exiting."
            exit 0
          fi

          TAG="$FORMULA-v$VERSION"
          if ! gh release view "$TAG" &>/dev/null; then
            gh release create "$TAG" --title "$FORMULA v$VERSION"
          fi
          gh release upload "$TAG" bottles/*.tar.gz --clobber

          echo proceed=true >> "$GITHUB_OUTPUT"

      - name: Update formula file
        if: steps.release.outputs.proceed == 'true'
        env:
          HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          ROOT_URL: ${{ needs.prep.outputs.root_url }}
          FORMULA: ${{ needs.prep.outputs.formula }}
        run: |
          set -euo pipefail

          brew bottle --merge --write --no-commit --root-url="$ROOT_URL" bottles/*.bottle.json

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "Formula/$FORMULA.rb"
          git commit -m "$PR_TITLE bottle block [skip ci]" || echo "No changes to commit"
          git push origin HEAD
